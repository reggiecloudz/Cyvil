@model Team

@{
ViewData["Title"] = Model.Name;
}

@section Stylesheets {
<link href="~/vendors/flatpickr/flatpickr.min.css" rel="stylesheet">
}

<div class="content">
    <div class="card mb-4">
        <div class="card-header border-bottom-0 pb-0">
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center">
                    <div>
                        <div class="nav nav-divider">
                            <h4 class="nav-item card-title mb-0"> 
                                Team Details
                            </h4>
                        </div>
                    </div>
                </div>
                <div class="btn-reveal-trigger">
                    <button class="btn btn-sm dropdown-toggle dropdown-caret-none transition-none d-flex btn-reveal" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false" data-bs-reference="parent">
                        <span class="fas fa-ellipsis-h"></span>
                    </button>
                    <div class="dropdown-menu dropdown-menu-end py-2">
                        <a class="dropdown-item" href="#!">Edit</a>
                        <a class="dropdown-item text-danger" href="#!">Delete</a>
                        <a class="dropdown-item" href="#!">Download</a>
                        <a class="dropdown-item" href="#!">Report abuse</a>
                    </div>
                </div>
            </div>
        </div>
        <div id="ticket-details" class="card-body">
            <div class="row g-4 g-xl-6">
                <div class="col-xl-5 col-xxl-4 border-end">
                    <div class="sticky-leads-sidebar">
                        <div class="row align-items-center g-3 mb-3 border-2 border-dashed pb-4 border-bottom">
                        @await Html.PartialAsync("Projects/_ProjectDetailsTaskChart")
                        </div>
                        <div class="border-2 border-dashed border-bottom">
                        @await Html.PartialAsync("Projects/_ProjectActivity")
                        </div>
                    </div>
                </div>
                <div class="col-xl-7 col-xxl-8">
                    @await Html.PartialAsync("Teams/_TeamTabs")
                </div>
            </div>
        </div>
        <div class="card-footer border-0">
            <p>Footer</p>
        </div>
    </div>

    <partial name="_Footer" />
</div>

@await Component.InvokeAsync("SelectableVolunteer", new { id = Model.Id })

@section ProjectNav {
    @await Html.PartialAsync("Projects/_ProjectNav", Model.ProjectId)
}

@section VendorScripts {
<script src="~/vendors/echarts/echarts.min.js"></script>
}

@section CustomScripts {
<script src="~/assets/js/project-details.js"></script>
<script src="~/js/app.js"></script>
<script>
    var form = document.getElementById('add-member-form');

    form.addEventListener('submit', e => {
        e.preventDefault();

        var myModalEl = document.getElementById('volunteerModal');
        var modal = bootstrap.Modal.getInstance(myModalEl);
        const formData = new FormData(e.target);
        const url = "/Teams/" + '@Model.Id' + "/Add-Members";

        function successCallback(response) {
            modal.hide();
            form.reset();
            console.log(response);
        }

        function errorCallback(xhr, status, error) {
            modal.hide();
            form.reset();
            console.log(error);
        }

        ajaxFormPost(url, formData, successCallback, errorCallback);
    })

    /*var checkboxes = $("input[id^='inlineCheckbox_']");

    checkboxes.each(function() {
        const itemValue = $(this).attr('id');
        var appId = itemValue.split('_')[1];

        document.getElementById(`inlineCheckbox_${appId}`).addEventListener('click', event => {
            if(event.target.checked) {
                alert("Checkbox checked: " + appId);
            }
        });
    });*/
</script>
}