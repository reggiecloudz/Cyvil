@model Team

@{
ViewData["Title"] = Model.Name;
}

@section Stylesheets {
<link href="~/vendors/flatpickr/flatpickr.min.css" rel="stylesheet">
}

<div class="content px-0" style="padding-top: 7rem">
    <div class="row g-0">
        <div class="col-12 col-xxl-8 px-0 bg-soft">
            <div class="px-4 px-lg-6 pt-6 pb-9">
                @await Html.PartialAsync("Teams/_TeamDetailsHeader", Model)
                
                <div class="row gx-0 gx-sm-5 gy-8 mb-8">
                    <div class="col-12 col-lg-6 pe-xl-0">
                        <div class="card card-body h-100">
                            @await Html.PartialAsync("Projects/_ProjectDetailsTaskChart")
                        </div>
                    </div>
                    <div class="col-12 col-lg-6">
                        @await Html.PartialAsync("Projects/_ProjectDetailsToDoList")
                    </div>
                    @await Html.PartialAsync("Teams/_TeamMembers")
                </div>
            </div>
        </div>
        <div class="col-12 col-xxl-4 px-0 border-start-xxl border-300 border-top-sm">
            @await Html.PartialAsync("Projects/_ProjectActivity")
        </div>
    </div>

    <partial name="_Footer" />
</div>

@await Component.InvokeAsync("SelectableVolunteer", new { id = Model.Id })

@section ProjectNav {
    @await Html.PartialAsync("Projects/_ProjectNav", Model.ProjectId)
}

@section VendorScripts {
<script src="~/vendors/echarts/echarts.min.js"></script>
}

@section CustomScripts {
<script src="~/assets/js/project-details.js"></script>
<script src="~/js/app.js"></script>
<script>
    var form = document.getElementById('add-member-form');

    form.addEventListener('submit', e => {
        e.preventDefault();

        var myModalEl = document.getElementById('volunteerModal');
        var modal = bootstrap.Modal.getInstance(myModalEl);
        const formData = new FormData(e.target);
        const url = "/Teams/" + '@Model.Id' + "/Add-Members";

        function successCallback(response) {
            modal.hide();
            form.reset();
            console.log(response);
        }

        function errorCallback(xhr, status, error) {
            modal.hide();
            form.reset();
            console.log(error);
        }

        ajaxFormPost(url, formData, successCallback, errorCallback);
    })

    /*var checkboxes = $("input[id^='inlineCheckbox_']");

    checkboxes.each(function() {
        const itemValue = $(this).attr('id');
        var appId = itemValue.split('_')[1];

        document.getElementById(`inlineCheckbox_${appId}`).addEventListener('click', event => {
            if(event.target.checked) {
                alert("Checkbox checked: " + appId);
            }
        });
    });*/
</script>
}